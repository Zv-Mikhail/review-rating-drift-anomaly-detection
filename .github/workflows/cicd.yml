name: CICD

on:
  push:
    branches: [ "cicd-test" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/mishanya-ml:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/mishanya-ml:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}

      - name: Add Known Hosts
        run: |
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Restart Docker container
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/mishanya-ml:latest"
            CONTAINER="mishanya-ml"
            PORT=3000

            echo "Pulling image: $IMAGE"
            docker pull "$IMAGE"

            echo "Stopping old container (if any)"
            docker rm -f "$CONTAINER" || true

            mkdir -p ~/mishanya-ml-data

            echo "Starting new container"
            docker run -d --name "$CONTAINER" \
              -p ${PORT}:3000 \
              -v ~/mishanya-ml-data:/app/data \
              --restart unless-stopped \
              "$IMAGE"

            echo "Cleaning old images"
            docker image prune -af || true
          debug: true
